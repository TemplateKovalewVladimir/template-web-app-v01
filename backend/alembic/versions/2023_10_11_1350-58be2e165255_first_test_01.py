"""First test 01

Revision ID: 58be2e165255
Revises: 261f1d772373
Create Date: 2023-10-11 13:50:12.848931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "58be2e165255"
down_revision: Union[str, None] = "261f1d772373"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("surname", sa.String(length=50), nullable=False),
        sa.Column("patronymic", sa.String(length=50), nullable=False),
        sa.Column(
            "roles", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "avatar",
            sa.String(length=100),
            server_default="default.gif",
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("address")
    op.drop_table("user_account")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_account",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('user_account_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "name", sa.VARCHAR(length=30), autoincrement=False, nullable=False
        ),
        sa.Column(
            "fullname", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="user_account_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "address",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "email_address", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user_account.id"], name="address_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="address_pkey"),
    )
    op.drop_table("user")
    # ### end Alembic commands ###
